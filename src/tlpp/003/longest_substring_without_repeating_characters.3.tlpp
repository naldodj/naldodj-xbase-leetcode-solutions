/*

    3. Longest Substring Without Repeating Characters

    Given a string s, find the length of the longest substring without repeating characters.

    Example 1:

    Input: s = "abcabcbb"
    Output: 3
    Explanation: The answer is "abc", with the length of 3.

    Example 2:

    Input: s = "bbbbb"
    Output: 1
    Explanation: The answer is "b", with the length of 1.

    Example 3:

    Input: s = "pwwkew"
    Output: 3
    Explanation: The answer is "wke", with the length of 3.
    Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

    Constraints:

    0 <= s.length <= 5 * 104
    s consists of English letters, digits, symbols and spaces.

    Released to Public Domain.
    --------------------------------------------------------------------------------------

*/

#include "totvs.ch"

namespace dna.tech

procedure u_MainLongestSubstringWithoutRepeatingCharacters()

    local cSubString as character

    MsgInfo("abcabcbb =>"+LTrim(Str(lengthOfLongestsubString("abcabcbb",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName())  // Resultado: 3

    MsgInfo("bbbbb =>"+LTrim(Str(lengthOfLongestsubString("bbbbb",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName())    // Resultado: 1

    MsgInfo("pwwkew =>"+LTrim(Str(lengthOfLongestsubString("pwwkew",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName())    // Resultado: 3

    MsgInfo("blacktdn =>"+LTrim(Str(lengthOfLongestsubString("blacktdn",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName())  // Resultado: 8

    MsgInfo("susej ed odlaniram =>"+LTrim(Str(lengthOfLongestsubString("susej ed odlaniram",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName()) // Resultado: 8

    MsgInfo("xBase =>"+LTrim(Str(lengthOfLongestsubString("xBase",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName()) // Resultado: 5

    MsgInfo("harbour =>"+LTrim(Str(lengthOfLongestsubString("harbour",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName()) // Resultado: 6

    MsgInfo("tlpp =>"+LTrim(Str(lengthOfLongestsubString("tlpp",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName()) // Resultado: 3

    MsgInfo("advpl =>"+LTrim(Str(lengthOfLongestsubString("advpl",@cSubString)))+" =>"+FWJSOnSerialize(cSubString),ProcName()) // Resultado: 5

return

static function lengthOfLongestsubString(cString as character,/*@*/cSubString as character) as numeric

    local aSet := array(0) as array  // "Conjunto" para armazenar os caracteres na janela

    local cChar as character         // Caractere atual

    local nAT as numeric
    local nEnd as numeric            // indice final da janela
    local nStart := 1 as numeric      // indice inicial da janela
    local nMaxLength := 0 as numeric  // Comprimento maximo encontrado

    // Percorre a string com o indice nEnd como limite da janela
    for nEnd := 1 to Len(cString)

        cChar := subStr(cString, nEnd, 1)

        // Se o caractere ja estiver na janela, remova ate que ele seja único
        while (aScan(aSet, cChar) > 0)
            nAT:=aScan(aSet, subStr(cString, nStart, 1))
            if (nAT>0)
                aSize(aDel(aSet,nAT),Len(aSet)-1)
            endif
            nStart++
        end while

        // Adiciona o caractere ao "conjunto"
        aAdd(aSet,cChar)

        // Atualiza o comprimento máximo e armazena a substring correspondente
        if (nEnd - nStart + 1 > nMaxLength)
            nMaxLength := nEnd - nStart + 1
            cSubString := subStr(cString, nStart, nMaxLength)
        endif

    next nEnd

    return nMaxLength
